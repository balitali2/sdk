@Library('shared-library') _

def COLOR_MAP = [
    'SUCCESS': 'good',
    'FAILURE': 'danger',
]

pipeline {
  agent any

  options {
    disableConcurrentBuilds()
    timeout(time: 2, unit: 'HOURS')
  }
  stages{
    stage("Run SDK e2e tests in parallel") {
      steps {
          script {
            def environments = ['development', 'staging']
            def blockchains = ['ethereum']
            def jobs = [:]
            for(environment in environments){
              for(blockchain in blockchains){
                def env_param = environment
                def blockchain_param = blockchain
                def job = { build job: "e2e-sdk-child",
                  parameters: [
                    string(name: 'TEST_ENV', value: "${env_param}"),
                    string(name: 'BLOCKCHAIN', value: "${blockchain_param}")
                  ],
                  wait: false }
                def index = blockchain + " " + environment
                jobs[index] = job
              }
            }
            parallel jobs
          }
      }
    }
  }
}
